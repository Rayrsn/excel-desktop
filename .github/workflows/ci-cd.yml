name: CI/CD - Build and Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3
          channels: conda-forge
          auto-activate-base: false

      - name: Install dependencies (macOS)
        if: runner.os == 'macos'
        run: |
          brew update
          # brew install python3  # Assuming Homebrew has Python 3.12 available

      - name: Install dependencies (Windows)
        if: runner.os == 'windows-latest'
        uses: actions/setup-python@v2
        with:
          python-version: 3

      - name: Install Qt (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3

      # - name: Install Qt (macOS) - Using Homebrew (Optional)
      #   if: runner.os == 'macos'
      #   run: brew install qt

      # - name: Install Qt (Windows) - Manual or Package Manager
      #   if: runner.os == 'windows-latest'
      #   run: choco install qt

      - name: Install application dependencies
        run: pip install -r requirements.txt

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile --windowed --icon=bkp_logo.jpg --add-data 'bkp_logo.jpg;.' main.py

      - name: Upload artifacts (optional)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-executable
          path: dist/ # Replace with the directory containing your executable
